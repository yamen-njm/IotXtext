/*
 * generated by Xtext 2.16.0
 */
package edu.univ.nantes.iot.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import edu.univ.nantes.iot.ide.contentassist.antlr.internal.InternalIotDslParser;
import edu.univ.nantes.iot.services.IotDslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class IotDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(IotDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, IotDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getModeAccess().getAlternatives(), "rule__Mode__Alternatives");
			builder.put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
			builder.put(grammarAccess.getNetworkAccess().getGroup(), "rule__Network__Group__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_2(), "rule__Network__Group_2__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_5(), "rule__Network__Group_5__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_5_3(), "rule__Network__Group_5_3__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_6(), "rule__Network__Group_6__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_6_3(), "rule__Network__Group_6_3__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_7(), "rule__Network__Group_7__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_7_3(), "rule__Network__Group_7_3__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_8(), "rule__Network__Group_8__0");
			builder.put(grammarAccess.getNetworkAccess().getGroup_8_3(), "rule__Network__Group_8_3__0");
			builder.put(grammarAccess.getMeasureAccess().getGroup(), "rule__Measure__Group__0");
			builder.put(grammarAccess.getMeasureAccess().getGroup_1(), "rule__Measure__Group_1__0");
			builder.put(grammarAccess.getMeasureAccess().getGroup_2(), "rule__Measure__Group_2__0");
			builder.put(grammarAccess.getInstrumentAccess().getGroup(), "rule__Instrument__Group__0");
			builder.put(grammarAccess.getInstrumentAccess().getGroup_0(), "rule__Instrument__Group_0__0");
			builder.put(grammarAccess.getInstrumentAccess().getGroup_4(), "rule__Instrument__Group_4__0");
			builder.put(grammarAccess.getMeasurandAccess().getGroup(), "rule__Measurand__Group__0");
			builder.put(grammarAccess.getMeasurandAccess().getGroup_1(), "rule__Measurand__Group_1__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup(), "rule__Device__Group__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup_0(), "rule__Device__Group_0__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup_4(), "rule__Device__Group_4__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup_6(), "rule__Device__Group_6__0");
			builder.put(grammarAccess.getDeviceAccess().getGroup_6_3(), "rule__Device__Group_6_3__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup(), "rule__BrokerConf__Group__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_2(), "rule__BrokerConf__Group_2__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_3(), "rule__BrokerConf__Group_3__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_4(), "rule__BrokerConf__Group_4__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_5(), "rule__BrokerConf__Group_5__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_6(), "rule__BrokerConf__Group_6__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_7(), "rule__BrokerConf__Group_7__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_8(), "rule__BrokerConf__Group_8__0");
			builder.put(grammarAccess.getBrokerConfAccess().getGroup_9(), "rule__BrokerConf__Group_9__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
			builder.put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
			builder.put(grammarAccess.getInterestAccess().getGroup(), "rule__Interest__Group__0");
			builder.put(grammarAccess.getInterestAccess().getGroup_0(), "rule__Interest__Group_0__0");
			builder.put(grammarAccess.getInterestAccess().getGroup_4(), "rule__Interest__Group_4__0");
			builder.put(grammarAccess.getFeaturesAccess().getGroup(), "rule__Features__Group__0");
			builder.put(grammarAccess.getFeaturesAccess().getGroup_1(), "rule__Features__Group_1__0");
			builder.put(grammarAccess.getFeaturesAccess().getGroup_2(), "rule__Features__Group_2__0");
			builder.put(grammarAccess.getFeaturesAccess().getGroup_3(), "rule__Features__Group_3__0");
			builder.put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
			builder.put(grammarAccess.getBindingAccess().getGroup_1(), "rule__Binding__Group_1__0");
			builder.put(grammarAccess.getBindingAccess().getGroup_2(), "rule__Binding__Group_2__0");
			builder.put(grammarAccess.getBindingAccess().getGroup_3(), "rule__Binding__Group_3__0");
			builder.put(grammarAccess.getNetworkAccess().getNameAssignment_2_1(), "rule__Network__NameAssignment_2_1");
			builder.put(grammarAccess.getNetworkAccess().getBrokerconfAssignment_4(), "rule__Network__BrokerconfAssignment_4");
			builder.put(grammarAccess.getNetworkAccess().getMeasureAssignment_5_2(), "rule__Network__MeasureAssignment_5_2");
			builder.put(grammarAccess.getNetworkAccess().getMeasureAssignment_5_3_1(), "rule__Network__MeasureAssignment_5_3_1");
			builder.put(grammarAccess.getNetworkAccess().getInstrumentAssignment_6_2(), "rule__Network__InstrumentAssignment_6_2");
			builder.put(grammarAccess.getNetworkAccess().getInstrumentAssignment_6_3_1(), "rule__Network__InstrumentAssignment_6_3_1");
			builder.put(grammarAccess.getNetworkAccess().getMeasurandAssignment_7_2(), "rule__Network__MeasurandAssignment_7_2");
			builder.put(grammarAccess.getNetworkAccess().getMeasurandAssignment_7_3_1(), "rule__Network__MeasurandAssignment_7_3_1");
			builder.put(grammarAccess.getNetworkAccess().getDeviceAssignment_8_2(), "rule__Network__DeviceAssignment_8_2");
			builder.put(grammarAccess.getNetworkAccess().getDeviceAssignment_8_3_1(), "rule__Network__DeviceAssignment_8_3_1");
			builder.put(grammarAccess.getMeasureAccess().getNameAssignment_1_1(), "rule__Measure__NameAssignment_1_1");
			builder.put(grammarAccess.getMeasureAccess().getTypeAssignment_2_1(), "rule__Measure__TypeAssignment_2_1");
			builder.put(grammarAccess.getInstrumentAccess().getNameAssignment_0_1(), "rule__Instrument__NameAssignment_0_1");
			builder.put(grammarAccess.getInstrumentAccess().getInteretAssignment_3(), "rule__Instrument__InteretAssignment_3");
			builder.put(grammarAccess.getInstrumentAccess().getInteretAssignment_4_1(), "rule__Instrument__InteretAssignment_4_1");
			builder.put(grammarAccess.getMeasurandAccess().getNameAssignment_1_1(), "rule__Measurand__NameAssignment_1_1");
			builder.put(grammarAccess.getDeviceAccess().getNameAssignment_0_1(), "rule__Device__NameAssignment_0_1");
			builder.put(grammarAccess.getDeviceAccess().getInstrumentAssignment_3(), "rule__Device__InstrumentAssignment_3");
			builder.put(grammarAccess.getDeviceAccess().getInstrumentAssignment_4_1(), "rule__Device__InstrumentAssignment_4_1");
			builder.put(grammarAccess.getDeviceAccess().getBindingAssignment_6_2(), "rule__Device__BindingAssignment_6_2");
			builder.put(grammarAccess.getDeviceAccess().getBindingAssignment_6_3_1(), "rule__Device__BindingAssignment_6_3_1");
			builder.put(grammarAccess.getBrokerConfAccess().getNameAssignment_2_1(), "rule__BrokerConf__NameAssignment_2_1");
			builder.put(grammarAccess.getBrokerConfAccess().getServerAssignment_3_1(), "rule__BrokerConf__ServerAssignment_3_1");
			builder.put(grammarAccess.getBrokerConfAccess().getUserAssignment_4_1(), "rule__BrokerConf__UserAssignment_4_1");
			builder.put(grammarAccess.getBrokerConfAccess().getPortAssignment_5_1(), "rule__BrokerConf__PortAssignment_5_1");
			builder.put(grammarAccess.getBrokerConfAccess().getPasswordAssignment_6_1(), "rule__BrokerConf__PasswordAssignment_6_1");
			builder.put(grammarAccess.getBrokerConfAccess().getSslPortAssignment_7_1(), "rule__BrokerConf__SslPortAssignment_7_1");
			builder.put(grammarAccess.getBrokerConfAccess().getWebSocketsPortAssignment_8_1(), "rule__BrokerConf__WebSocketsPortAssignment_8_1");
			builder.put(grammarAccess.getBrokerConfAccess().getConnectionLimitAssignment_9_1(), "rule__BrokerConf__ConnectionLimitAssignment_9_1");
			builder.put(grammarAccess.getInterestAccess().getNameAssignment_0_1(), "rule__Interest__NameAssignment_0_1");
			builder.put(grammarAccess.getInterestAccess().getFeaturesAssignment_3(), "rule__Interest__FeaturesAssignment_3");
			builder.put(grammarAccess.getInterestAccess().getFeaturesAssignment_4_1(), "rule__Interest__FeaturesAssignment_4_1");
			builder.put(grammarAccess.getFeaturesAccess().getNameAssignment_1_1(), "rule__Features__NameAssignment_1_1");
			builder.put(grammarAccess.getFeaturesAccess().getMeasureAssignment_2_1(), "rule__Features__MeasureAssignment_2_1");
			builder.put(grammarAccess.getFeaturesAccess().getModeAssignment_3_1(), "rule__Features__ModeAssignment_3_1");
			builder.put(grammarAccess.getBindingAccess().getNameAssignment_1_1(), "rule__Binding__NameAssignment_1_1");
			builder.put(grammarAccess.getBindingAccess().getMeasurandAssignment_2_1(), "rule__Binding__MeasurandAssignment_2_1");
			builder.put(grammarAccess.getBindingAccess().getFeaturesAssignment_3_1(), "rule__Binding__FeaturesAssignment_3_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private IotDslGrammarAccess grammarAccess;

	@Override
	protected InternalIotDslParser createParser() {
		InternalIotDslParser result = new InternalIotDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public IotDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(IotDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
