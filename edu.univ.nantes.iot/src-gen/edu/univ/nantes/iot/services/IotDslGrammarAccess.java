/*
 * generated by Xtext 2.16.0
 */
package edu.univ.nantes.iot.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractEnumRuleElementFinder;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class IotDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class NetworkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Network");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNetworkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Keyword cBrokerconfKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cBrokerconfAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cBrokerconfBrokerConfParserRuleCall_4_0 = (RuleCall)cBrokerconfAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cMeasureKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cMeasureAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cMeasureMeasureParserRuleCall_5_2_0 = (RuleCall)cMeasureAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cMeasureAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cMeasureMeasureParserRuleCall_5_3_1_0 = (RuleCall)cMeasureAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cInstrumentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cInstrumentAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cInstrumentInstrumentParserRuleCall_6_2_0 = (RuleCall)cInstrumentAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cInstrumentAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cInstrumentInstrumentParserRuleCall_6_3_1_0 = (RuleCall)cInstrumentAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cMeasurandKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cMeasurandAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cMeasurandMeasurandParserRuleCall_7_2_0 = (RuleCall)cMeasurandAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cMeasurandAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cMeasurandMeasurandParserRuleCall_7_3_1_0 = (RuleCall)cMeasurandAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cDeviceKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cDeviceAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cDeviceDeviceParserRuleCall_8_2_0 = (RuleCall)cDeviceAssignment_8_2.eContents().get(0);
		private final Group cGroup_8_3 = (Group)cGroup_8.eContents().get(3);
		private final Keyword cCommaKeyword_8_3_0 = (Keyword)cGroup_8_3.eContents().get(0);
		private final Assignment cDeviceAssignment_8_3_1 = (Assignment)cGroup_8_3.eContents().get(1);
		private final RuleCall cDeviceDeviceParserRuleCall_8_3_1_0 = (RuleCall)cDeviceAssignment_8_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8_4 = (Keyword)cGroup_8.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Network:
		//	'Network'
		//	'{' ('name' name=ID)?
		//	'brokerconf' brokerconf=BrokerConf ('measure' '{' measure+=Measure ("," measure+=Measure)* '}')? ('instrument' '{'
		//	instrument+=Instrument ("," instrument+=Instrument)* '}')? ('measurand' '{' measurand+=Measurand (","
		//	measurand+=Measurand)* '}')? ('device' '{' device+=Device ("," device+=Device)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Network' '{' ('name' name=ID)? 'brokerconf' brokerconf=BrokerConf ('measure' '{' measure+=Measure (","
		//measure+=Measure)* '}')? ('instrument' '{' instrument+=Instrument ("," instrument+=Instrument)* '}')? ('measurand' '{'
		//measurand+=Measurand ("," measurand+=Measurand)* '}')? ('device' '{' device+=Device ("," device+=Device)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//'Network'
		public Keyword getNetworkKeyword_0() { return cNetworkKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('name' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }
		
		//'brokerconf'
		public Keyword getBrokerconfKeyword_3() { return cBrokerconfKeyword_3; }
		
		//brokerconf=BrokerConf
		public Assignment getBrokerconfAssignment_4() { return cBrokerconfAssignment_4; }
		
		//BrokerConf
		public RuleCall getBrokerconfBrokerConfParserRuleCall_4_0() { return cBrokerconfBrokerConfParserRuleCall_4_0; }
		
		//('measure' '{' measure+=Measure ("," measure+=Measure)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'measure'
		public Keyword getMeasureKeyword_5_0() { return cMeasureKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//measure+=Measure
		public Assignment getMeasureAssignment_5_2() { return cMeasureAssignment_5_2; }
		
		//Measure
		public RuleCall getMeasureMeasureParserRuleCall_5_2_0() { return cMeasureMeasureParserRuleCall_5_2_0; }
		
		//("," measure+=Measure)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//measure+=Measure
		public Assignment getMeasureAssignment_5_3_1() { return cMeasureAssignment_5_3_1; }
		
		//Measure
		public RuleCall getMeasureMeasureParserRuleCall_5_3_1_0() { return cMeasureMeasureParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('instrument' '{' instrument+=Instrument ("," instrument+=Instrument)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'instrument'
		public Keyword getInstrumentKeyword_6_0() { return cInstrumentKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//instrument+=Instrument
		public Assignment getInstrumentAssignment_6_2() { return cInstrumentAssignment_6_2; }
		
		//Instrument
		public RuleCall getInstrumentInstrumentParserRuleCall_6_2_0() { return cInstrumentInstrumentParserRuleCall_6_2_0; }
		
		//("," instrument+=Instrument)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//instrument+=Instrument
		public Assignment getInstrumentAssignment_6_3_1() { return cInstrumentAssignment_6_3_1; }
		
		//Instrument
		public RuleCall getInstrumentInstrumentParserRuleCall_6_3_1_0() { return cInstrumentInstrumentParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//('measurand' '{' measurand+=Measurand ("," measurand+=Measurand)* '}')?
		public Group getGroup_7() { return cGroup_7; }
		
		//'measurand'
		public Keyword getMeasurandKeyword_7_0() { return cMeasurandKeyword_7_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }
		
		//measurand+=Measurand
		public Assignment getMeasurandAssignment_7_2() { return cMeasurandAssignment_7_2; }
		
		//Measurand
		public RuleCall getMeasurandMeasurandParserRuleCall_7_2_0() { return cMeasurandMeasurandParserRuleCall_7_2_0; }
		
		//("," measurand+=Measurand)*
		public Group getGroup_7_3() { return cGroup_7_3; }
		
		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }
		
		//measurand+=Measurand
		public Assignment getMeasurandAssignment_7_3_1() { return cMeasurandAssignment_7_3_1; }
		
		//Measurand
		public RuleCall getMeasurandMeasurandParserRuleCall_7_3_1_0() { return cMeasurandMeasurandParserRuleCall_7_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }
		
		//('device' '{' device+=Device ("," device+=Device)* '}')?
		public Group getGroup_8() { return cGroup_8; }
		
		//'device'
		public Keyword getDeviceKeyword_8_0() { return cDeviceKeyword_8_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8_1() { return cLeftCurlyBracketKeyword_8_1; }
		
		//device+=Device
		public Assignment getDeviceAssignment_8_2() { return cDeviceAssignment_8_2; }
		
		//Device
		public RuleCall getDeviceDeviceParserRuleCall_8_2_0() { return cDeviceDeviceParserRuleCall_8_2_0; }
		
		//("," device+=Device)*
		public Group getGroup_8_3() { return cGroup_8_3; }
		
		//","
		public Keyword getCommaKeyword_8_3_0() { return cCommaKeyword_8_3_0; }
		
		//device+=Device
		public Assignment getDeviceAssignment_8_3_1() { return cDeviceAssignment_8_3_1; }
		
		//Device
		public RuleCall getDeviceDeviceParserRuleCall_8_3_1_0() { return cDeviceDeviceParserRuleCall_8_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8_4() { return cRightCurlyBracketKeyword_8_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class MeasureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Measure");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMeasureAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cTypeKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeDataTypeEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		
		//Measure:
		//	{Measure} ('name' name=ID)? ('type' type=DataType)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Measure} ('name' name=ID)? ('type' type=DataType)?
		public Group getGroup() { return cGroup; }
		
		//{Measure}
		public Action getMeasureAction_0() { return cMeasureAction_0; }
		
		//('name' name=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'name'
		public Keyword getNameKeyword_1_0() { return cNameKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//('type' type=DataType)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'type'
		public Keyword getTypeKeyword_2_0() { return cTypeKeyword_2_0; }
		
		//type=DataType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }
		
		//DataType
		public RuleCall getTypeDataTypeEnumRuleCall_2_1_0() { return cTypeDataTypeEnumRuleCall_2_1_0; }
	}
	public class InstrumentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Instrument");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cInterestKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInteretAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInteretInterestParserRuleCall_3_0 = (RuleCall)cInteretAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInteretAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cInteretInterestParserRuleCall_4_1_0 = (RuleCall)cInteretAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Instrument:
		//	('name' name=ID)?
		//	'interest' '{' interet+=Interest ("," interet+=Interest)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//('name' name=ID)? 'interest' '{' interet+=Interest ("," interet+=Interest)* '}'
		public Group getGroup() { return cGroup; }
		
		//('name' name=ID)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'name'
		public Keyword getNameKeyword_0_0() { return cNameKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'interest'
		public Keyword getInterestKeyword_1() { return cInterestKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//interet+=Interest
		public Assignment getInteretAssignment_3() { return cInteretAssignment_3; }
		
		//Interest
		public RuleCall getInteretInterestParserRuleCall_3_0() { return cInteretInterestParserRuleCall_3_0; }
		
		//("," interet+=Interest)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//interet+=Interest
		public Assignment getInteretAssignment_4_1() { return cInteretAssignment_4_1; }
		
		//Interest
		public RuleCall getInteretInterestParserRuleCall_4_1_0() { return cInteretInterestParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MeasurandElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Measurand");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMeasurandAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		
		//Measurand:
		//	{Measurand} ('name' name=ID)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Measurand} ('name' name=ID)?
		public Group getGroup() { return cGroup; }
		
		//{Measurand}
		public Action getMeasurandAction_0() { return cMeasurandAction_0; }
		
		//('name' name=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'name'
		public Keyword getNameKeyword_1_0() { return cNameKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
	}
	public class DeviceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Device");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cInstrumentKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInstrumentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cInstrumentInstrumentCrossReference_3_0 = (CrossReference)cInstrumentAssignment_3.eContents().get(0);
		private final RuleCall cInstrumentInstrumentIDTerminalRuleCall_3_0_1 = (RuleCall)cInstrumentInstrumentCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cInstrumentAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cInstrumentInstrumentCrossReference_4_1_0 = (CrossReference)cInstrumentAssignment_4_1.eContents().get(0);
		private final RuleCall cInstrumentInstrumentIDTerminalRuleCall_4_1_0_1 = (RuleCall)cInstrumentInstrumentCrossReference_4_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cBindingKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cBindingAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cBindingBindingParserRuleCall_6_2_0 = (RuleCall)cBindingAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cBindingAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cBindingBindingParserRuleCall_6_3_1_0 = (RuleCall)cBindingAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		
		//Device:
		//	('name' name=ID)?
		//	'instrument' '(' instrument+=[Instrument] ("," instrument+=[Instrument])* ')' ('binding' '{' binding+=Binding (","
		//	binding+=Binding)* '}')?;
		@Override public ParserRule getRule() { return rule; }
		
		//('name' name=ID)? 'instrument' '(' instrument+=[Instrument] ("," instrument+=[Instrument])* ')' ('binding' '{'
		//binding+=Binding ("," binding+=Binding)* '}')?
		public Group getGroup() { return cGroup; }
		
		//('name' name=ID)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'name'
		public Keyword getNameKeyword_0_0() { return cNameKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'instrument'
		public Keyword getInstrumentKeyword_1() { return cInstrumentKeyword_1; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }
		
		//instrument+=[Instrument]
		public Assignment getInstrumentAssignment_3() { return cInstrumentAssignment_3; }
		
		//[Instrument]
		public CrossReference getInstrumentInstrumentCrossReference_3_0() { return cInstrumentInstrumentCrossReference_3_0; }
		
		//ID
		public RuleCall getInstrumentInstrumentIDTerminalRuleCall_3_0_1() { return cInstrumentInstrumentIDTerminalRuleCall_3_0_1; }
		
		//("," instrument+=[Instrument])*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//instrument+=[Instrument]
		public Assignment getInstrumentAssignment_4_1() { return cInstrumentAssignment_4_1; }
		
		//[Instrument]
		public CrossReference getInstrumentInstrumentCrossReference_4_1_0() { return cInstrumentInstrumentCrossReference_4_1_0; }
		
		//ID
		public RuleCall getInstrumentInstrumentIDTerminalRuleCall_4_1_0_1() { return cInstrumentInstrumentIDTerminalRuleCall_4_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5() { return cRightParenthesisKeyword_5; }
		
		//('binding' '{' binding+=Binding ("," binding+=Binding)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'binding'
		public Keyword getBindingKeyword_6_0() { return cBindingKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//binding+=Binding
		public Assignment getBindingAssignment_6_2() { return cBindingAssignment_6_2; }
		
		//Binding
		public RuleCall getBindingBindingParserRuleCall_6_2_0() { return cBindingBindingParserRuleCall_6_2_0; }
		
		//("," binding+=Binding)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//binding+=Binding
		public Assignment getBindingAssignment_6_3_1() { return cBindingAssignment_6_3_1; }
		
		//Binding
		public RuleCall getBindingBindingParserRuleCall_6_3_1_0() { return cBindingBindingParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
	}
	public class BrokerConfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.BrokerConf");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBrokerConfAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cNameKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cNameAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_2_1_0 = (RuleCall)cNameAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cServerKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cServerAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cServerQualifiedNameParserRuleCall_3_1_0 = (RuleCall)cServerAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cUserKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cUserAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cUserQualifiedNameParserRuleCall_4_1_0 = (RuleCall)cUserAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cPortKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cPortAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cPortIntegerParserRuleCall_5_1_0 = (RuleCall)cPortAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cPasswordKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cPasswordAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cPasswordQualifiedNameParserRuleCall_6_1_0 = (RuleCall)cPasswordAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cSslPortKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cSslPortAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cSslPortIntegerParserRuleCall_7_1_0 = (RuleCall)cSslPortAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cWebSocketsPortKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cWebSocketsPortAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cWebSocketsPortIntegerParserRuleCall_8_1_0 = (RuleCall)cWebSocketsPortAssignment_8_1.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cConnectionLimitKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cConnectionLimitAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cConnectionLimitIntegerParserRuleCall_9_1_0 = (RuleCall)cConnectionLimitAssignment_9_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//BrokerConf:
		//	{BrokerConf}
		//	'{' ('name' name=ID)? ('server' server=QualifiedName)? ('user' user=QualifiedName)? ('port' port=Integer)? ('password'
		//	password=QualifiedName)? ('sslPort' sslPort=Integer)? ('webSocketsPort' webSocketsPort=Integer)? ('connectionLimit'
		//	connectionLimit=Integer)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{BrokerConf} '{' ('name' name=ID)? ('server' server=QualifiedName)? ('user' user=QualifiedName)? ('port' port=Integer)?
		//('password' password=QualifiedName)? ('sslPort' sslPort=Integer)? ('webSocketsPort' webSocketsPort=Integer)?
		//('connectionLimit' connectionLimit=Integer)? '}'
		public Group getGroup() { return cGroup; }
		
		//{BrokerConf}
		public Action getBrokerConfAction_0() { return cBrokerConfAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('name' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'name'
		public Keyword getNameKeyword_2_0() { return cNameKeyword_2_0; }
		
		//name=ID
		public Assignment getNameAssignment_2_1() { return cNameAssignment_2_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_1_0() { return cNameIDTerminalRuleCall_2_1_0; }
		
		//('server' server=QualifiedName)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'server'
		public Keyword getServerKeyword_3_0() { return cServerKeyword_3_0; }
		
		//server=QualifiedName
		public Assignment getServerAssignment_3_1() { return cServerAssignment_3_1; }
		
		//QualifiedName
		public RuleCall getServerQualifiedNameParserRuleCall_3_1_0() { return cServerQualifiedNameParserRuleCall_3_1_0; }
		
		//('user' user=QualifiedName)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'user'
		public Keyword getUserKeyword_4_0() { return cUserKeyword_4_0; }
		
		//user=QualifiedName
		public Assignment getUserAssignment_4_1() { return cUserAssignment_4_1; }
		
		//QualifiedName
		public RuleCall getUserQualifiedNameParserRuleCall_4_1_0() { return cUserQualifiedNameParserRuleCall_4_1_0; }
		
		//('port' port=Integer)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'port'
		public Keyword getPortKeyword_5_0() { return cPortKeyword_5_0; }
		
		//port=Integer
		public Assignment getPortAssignment_5_1() { return cPortAssignment_5_1; }
		
		//Integer
		public RuleCall getPortIntegerParserRuleCall_5_1_0() { return cPortIntegerParserRuleCall_5_1_0; }
		
		//('password' password=QualifiedName)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'password'
		public Keyword getPasswordKeyword_6_0() { return cPasswordKeyword_6_0; }
		
		//password=QualifiedName
		public Assignment getPasswordAssignment_6_1() { return cPasswordAssignment_6_1; }
		
		//QualifiedName
		public RuleCall getPasswordQualifiedNameParserRuleCall_6_1_0() { return cPasswordQualifiedNameParserRuleCall_6_1_0; }
		
		//('sslPort' sslPort=Integer)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'sslPort'
		public Keyword getSslPortKeyword_7_0() { return cSslPortKeyword_7_0; }
		
		//sslPort=Integer
		public Assignment getSslPortAssignment_7_1() { return cSslPortAssignment_7_1; }
		
		//Integer
		public RuleCall getSslPortIntegerParserRuleCall_7_1_0() { return cSslPortIntegerParserRuleCall_7_1_0; }
		
		//('webSocketsPort' webSocketsPort=Integer)?
		public Group getGroup_8() { return cGroup_8; }
		
		//'webSocketsPort'
		public Keyword getWebSocketsPortKeyword_8_0() { return cWebSocketsPortKeyword_8_0; }
		
		//webSocketsPort=Integer
		public Assignment getWebSocketsPortAssignment_8_1() { return cWebSocketsPortAssignment_8_1; }
		
		//Integer
		public RuleCall getWebSocketsPortIntegerParserRuleCall_8_1_0() { return cWebSocketsPortIntegerParserRuleCall_8_1_0; }
		
		//('connectionLimit' connectionLimit=Integer)?
		public Group getGroup_9() { return cGroup_9; }
		
		//'connectionLimit'
		public Keyword getConnectionLimitKeyword_9_0() { return cConnectionLimitKeyword_9_0; }
		
		//connectionLimit=Integer
		public Assignment getConnectionLimitAssignment_9_1() { return cConnectionLimitAssignment_9_1; }
		
		//Integer
		public RuleCall getConnectionLimitIntegerParserRuleCall_9_1_0() { return cConnectionLimitIntegerParserRuleCall_9_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class QualifiedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.QualifiedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//QualifiedName:
		//	ID ('.' ID)*;
		@Override public ParserRule getRule() { return rule; }
		
		//ID ('.' ID)*
		public Group getGroup() { return cGroup; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }
		
		//('.' ID)*
		public Group getGroup_1() { return cGroup_1; }
		
		//'.'
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}
	public class InterestElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Interest");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cFeaturesKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFeaturesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cFeaturesFeaturesParserRuleCall_3_0 = (RuleCall)cFeaturesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cFeaturesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cFeaturesFeaturesParserRuleCall_4_1_0 = (RuleCall)cFeaturesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		////ID returns type::String:
		////	'String' /* TODO: implement this rule and an appropriate IValueConverter */;
		//Interest:
		//	('name' name=ID)?
		//	'features' '{' features+=Features ("," features+=Features)* '}';
		@Override public ParserRule getRule() { return rule; }
		
		//('name' name=ID)? 'features' '{' features+=Features ("," features+=Features)* '}'
		public Group getGroup() { return cGroup; }
		
		//('name' name=ID)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'name'
		public Keyword getNameKeyword_0_0() { return cNameKeyword_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_1_0() { return cNameIDTerminalRuleCall_0_1_0; }
		
		//'features'
		public Keyword getFeaturesKeyword_1() { return cFeaturesKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//features+=Features
		public Assignment getFeaturesAssignment_3() { return cFeaturesAssignment_3; }
		
		//Features
		public RuleCall getFeaturesFeaturesParserRuleCall_3_0() { return cFeaturesFeaturesParserRuleCall_3_0; }
		
		//("," features+=Features)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//features+=Features
		public Assignment getFeaturesAssignment_4_1() { return cFeaturesAssignment_4_1; }
		
		//Features
		public RuleCall getFeaturesFeaturesParserRuleCall_4_1_0() { return cFeaturesFeaturesParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class FeaturesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Features");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFeaturesAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cMeasureKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMeasureAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cMeasureMeasureCrossReference_2_1_0 = (CrossReference)cMeasureAssignment_2_1.eContents().get(0);
		private final RuleCall cMeasureMeasureQualifiedNameParserRuleCall_2_1_0_1 = (RuleCall)cMeasureMeasureCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cModeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cModeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cModeModeEnumRuleCall_3_1_0 = (RuleCall)cModeAssignment_3_1.eContents().get(0);
		
		//Features:
		//	{Features} ('name' name=ID)? ('measure' measure=[Measure|QualifiedName])? ('mode' mode=Mode)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Features} ('name' name=ID)? ('measure' measure=[Measure|QualifiedName])? ('mode' mode=Mode)?
		public Group getGroup() { return cGroup; }
		
		//{Features}
		public Action getFeaturesAction_0() { return cFeaturesAction_0; }
		
		//('name' name=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'name'
		public Keyword getNameKeyword_1_0() { return cNameKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//('measure' measure=[Measure|QualifiedName])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'measure'
		public Keyword getMeasureKeyword_2_0() { return cMeasureKeyword_2_0; }
		
		//measure=[Measure|QualifiedName]
		public Assignment getMeasureAssignment_2_1() { return cMeasureAssignment_2_1; }
		
		//[Measure|QualifiedName]
		public CrossReference getMeasureMeasureCrossReference_2_1_0() { return cMeasureMeasureCrossReference_2_1_0; }
		
		//QualifiedName
		public RuleCall getMeasureMeasureQualifiedNameParserRuleCall_2_1_0_1() { return cMeasureMeasureQualifiedNameParserRuleCall_2_1_0_1; }
		
		//('mode' mode=Mode)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'mode'
		public Keyword getModeKeyword_3_0() { return cModeKeyword_3_0; }
		
		//mode=Mode
		public Assignment getModeAssignment_3_1() { return cModeAssignment_3_1; }
		
		//Mode
		public RuleCall getModeModeEnumRuleCall_3_1_0() { return cModeModeEnumRuleCall_3_1_0; }
	}
	public class BindingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Binding");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBindingAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cMeasurandKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cMeasurandAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cMeasurandMeasurandCrossReference_2_1_0 = (CrossReference)cMeasurandAssignment_2_1.eContents().get(0);
		private final RuleCall cMeasurandMeasurandIDTerminalRuleCall_2_1_0_1 = (RuleCall)cMeasurandMeasurandCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cFeaturesKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cFeaturesAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cFeaturesFeaturesCrossReference_3_1_0 = (CrossReference)cFeaturesAssignment_3_1.eContents().get(0);
		private final RuleCall cFeaturesFeaturesQualifiedNameParserRuleCall_3_1_0_1 = (RuleCall)cFeaturesFeaturesCrossReference_3_1_0.eContents().get(1);
		
		//Binding:
		//	{Binding} ('name' name=ID)? ('measurand' measurand=[Measurand])? ('features' features=[Features|QualifiedName])?;
		@Override public ParserRule getRule() { return rule; }
		
		//{Binding} ('name' name=ID)? ('measurand' measurand=[Measurand])? ('features' features=[Features|QualifiedName])?
		public Group getGroup() { return cGroup; }
		
		//{Binding}
		public Action getBindingAction_0() { return cBindingAction_0; }
		
		//('name' name=ID)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'name'
		public Keyword getNameKeyword_1_0() { return cNameKeyword_1_0; }
		
		//name=ID
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_1_0() { return cNameIDTerminalRuleCall_1_1_0; }
		
		//('measurand' measurand=[Measurand])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'measurand'
		public Keyword getMeasurandKeyword_2_0() { return cMeasurandKeyword_2_0; }
		
		//measurand=[Measurand]
		public Assignment getMeasurandAssignment_2_1() { return cMeasurandAssignment_2_1; }
		
		//[Measurand]
		public CrossReference getMeasurandMeasurandCrossReference_2_1_0() { return cMeasurandMeasurandCrossReference_2_1_0; }
		
		//ID
		public RuleCall getMeasurandMeasurandIDTerminalRuleCall_2_1_0_1() { return cMeasurandMeasurandIDTerminalRuleCall_2_1_0_1; }
		
		//('features' features=[Features|QualifiedName])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'features'
		public Keyword getFeaturesKeyword_3_0() { return cFeaturesKeyword_3_0; }
		
		//features=[Features|QualifiedName]
		public Assignment getFeaturesAssignment_3_1() { return cFeaturesAssignment_3_1; }
		
		//[Features|QualifiedName]
		public CrossReference getFeaturesFeaturesCrossReference_3_1_0() { return cFeaturesFeaturesCrossReference_3_1_0; }
		
		//QualifiedName
		public RuleCall getFeaturesFeaturesQualifiedNameParserRuleCall_3_1_0_1() { return cFeaturesFeaturesQualifiedNameParserRuleCall_3_1_0_1; }
	}
	public class IntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Integer");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer type::Integer:
		//	INT /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}
	
	public class ModeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.Mode");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cINPUTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cINPUTINPUTKeyword_0_0 = (Keyword)cINPUTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOUTPUTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOUTPUTOUTPUTKeyword_1_0 = (Keyword)cOUTPUTEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum Mode:
		//	INPUT | OUTPUT;
		public EnumRule getRule() { return rule; }
		
		//INPUT | OUTPUT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//INPUT
		public EnumLiteralDeclaration getINPUTEnumLiteralDeclaration_0() { return cINPUTEnumLiteralDeclaration_0; }
		
		//'INPUT'
		public Keyword getINPUTINPUTKeyword_0_0() { return cINPUTINPUTKeyword_0_0; }
		
		//OUTPUT
		public EnumLiteralDeclaration getOUTPUTEnumLiteralDeclaration_1() { return cOUTPUTEnumLiteralDeclaration_1; }
		
		//'OUTPUT'
		public Keyword getOUTPUTOUTPUTKeyword_1_0() { return cOUTPUTOUTPUTKeyword_1_0; }
	}
	public class DataTypeElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "edu.univ.nantes.iot.IotDsl.DataType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cBooleanEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cBooleanBooleanKeyword_0_0 = (Keyword)cBooleanEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cStringEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cStringStringKeyword_1_0 = (Keyword)cStringEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNumberEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNumberNumberKeyword_2_0 = (Keyword)cNumberEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cDateEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cDateDateKeyword_3_0 = (Keyword)cDateEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum DataType:
		//	boolean | string='String' | number | date;
		public EnumRule getRule() { return rule; }
		
		//boolean | string='String' | number | date
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//boolean
		public EnumLiteralDeclaration getBooleanEnumLiteralDeclaration_0() { return cBooleanEnumLiteralDeclaration_0; }
		
		//'boolean'
		public Keyword getBooleanBooleanKeyword_0_0() { return cBooleanBooleanKeyword_0_0; }
		
		//string='String'
		public EnumLiteralDeclaration getStringEnumLiteralDeclaration_1() { return cStringEnumLiteralDeclaration_1; }
		
		//'String'
		public Keyword getStringStringKeyword_1_0() { return cStringStringKeyword_1_0; }
		
		//number
		public EnumLiteralDeclaration getNumberEnumLiteralDeclaration_2() { return cNumberEnumLiteralDeclaration_2; }
		
		//'number'
		public Keyword getNumberNumberKeyword_2_0() { return cNumberNumberKeyword_2_0; }
		
		//date
		public EnumLiteralDeclaration getDateEnumLiteralDeclaration_3() { return cDateEnumLiteralDeclaration_3; }
		
		//'date'
		public Keyword getDateDateKeyword_3_0() { return cDateDateKeyword_3_0; }
	}
	
	private final NetworkElements pNetwork;
	private final MeasureElements pMeasure;
	private final InstrumentElements pInstrument;
	private final MeasurandElements pMeasurand;
	private final DeviceElements pDevice;
	private final BrokerConfElements pBrokerConf;
	private final QualifiedNameElements pQualifiedName;
	private final InterestElements pInterest;
	private final FeaturesElements pFeatures;
	private final ModeElements eMode;
	private final BindingElements pBinding;
	private final IntegerElements pInteger;
	private final DataTypeElements eDataType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public IotDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pNetwork = new NetworkElements();
		this.pMeasure = new MeasureElements();
		this.pInstrument = new InstrumentElements();
		this.pMeasurand = new MeasurandElements();
		this.pDevice = new DeviceElements();
		this.pBrokerConf = new BrokerConfElements();
		this.pQualifiedName = new QualifiedNameElements();
		this.pInterest = new InterestElements();
		this.pFeatures = new FeaturesElements();
		this.eMode = new ModeElements();
		this.pBinding = new BindingElements();
		this.pInteger = new IntegerElements();
		this.eDataType = new DataTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("edu.univ.nantes.iot.IotDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Network:
	//	'Network'
	//	'{' ('name' name=ID)?
	//	'brokerconf' brokerconf=BrokerConf ('measure' '{' measure+=Measure ("," measure+=Measure)* '}')? ('instrument' '{'
	//	instrument+=Instrument ("," instrument+=Instrument)* '}')? ('measurand' '{' measurand+=Measurand (","
	//	measurand+=Measurand)* '}')? ('device' '{' device+=Device ("," device+=Device)* '}')?
	//	'}';
	public NetworkElements getNetworkAccess() {
		return pNetwork;
	}
	
	public ParserRule getNetworkRule() {
		return getNetworkAccess().getRule();
	}
	
	//Measure:
	//	{Measure} ('name' name=ID)? ('type' type=DataType)?;
	public MeasureElements getMeasureAccess() {
		return pMeasure;
	}
	
	public ParserRule getMeasureRule() {
		return getMeasureAccess().getRule();
	}
	
	//Instrument:
	//	('name' name=ID)?
	//	'interest' '{' interet+=Interest ("," interet+=Interest)* '}';
	public InstrumentElements getInstrumentAccess() {
		return pInstrument;
	}
	
	public ParserRule getInstrumentRule() {
		return getInstrumentAccess().getRule();
	}
	
	//Measurand:
	//	{Measurand} ('name' name=ID)?;
	public MeasurandElements getMeasurandAccess() {
		return pMeasurand;
	}
	
	public ParserRule getMeasurandRule() {
		return getMeasurandAccess().getRule();
	}
	
	//Device:
	//	('name' name=ID)?
	//	'instrument' '(' instrument+=[Instrument] ("," instrument+=[Instrument])* ')' ('binding' '{' binding+=Binding (","
	//	binding+=Binding)* '}')?;
	public DeviceElements getDeviceAccess() {
		return pDevice;
	}
	
	public ParserRule getDeviceRule() {
		return getDeviceAccess().getRule();
	}
	
	//BrokerConf:
	//	{BrokerConf}
	//	'{' ('name' name=ID)? ('server' server=QualifiedName)? ('user' user=QualifiedName)? ('port' port=Integer)? ('password'
	//	password=QualifiedName)? ('sslPort' sslPort=Integer)? ('webSocketsPort' webSocketsPort=Integer)? ('connectionLimit'
	//	connectionLimit=Integer)?
	//	'}';
	public BrokerConfElements getBrokerConfAccess() {
		return pBrokerConf;
	}
	
	public ParserRule getBrokerConfRule() {
		return getBrokerConfAccess().getRule();
	}
	
	//QualifiedName:
	//	ID ('.' ID)*;
	public QualifiedNameElements getQualifiedNameAccess() {
		return pQualifiedName;
	}
	
	public ParserRule getQualifiedNameRule() {
		return getQualifiedNameAccess().getRule();
	}
	
	////ID returns type::String:
	////	'String' /* TODO: implement this rule and an appropriate IValueConverter */;
	//Interest:
	//	('name' name=ID)?
	//	'features' '{' features+=Features ("," features+=Features)* '}';
	public InterestElements getInterestAccess() {
		return pInterest;
	}
	
	public ParserRule getInterestRule() {
		return getInterestAccess().getRule();
	}
	
	//Features:
	//	{Features} ('name' name=ID)? ('measure' measure=[Measure|QualifiedName])? ('mode' mode=Mode)?;
	public FeaturesElements getFeaturesAccess() {
		return pFeatures;
	}
	
	public ParserRule getFeaturesRule() {
		return getFeaturesAccess().getRule();
	}
	
	//enum Mode:
	//	INPUT | OUTPUT;
	public ModeElements getModeAccess() {
		return eMode;
	}
	
	public EnumRule getModeRule() {
		return getModeAccess().getRule();
	}
	
	//Binding:
	//	{Binding} ('name' name=ID)? ('measurand' measurand=[Measurand])? ('features' features=[Features|QualifiedName])?;
	public BindingElements getBindingAccess() {
		return pBinding;
	}
	
	public ParserRule getBindingRule() {
		return getBindingAccess().getRule();
	}
	
	//Integer type::Integer:
	//	INT /* TODO: implement this rule and an appropriate IValueConverter */;
	public IntegerElements getIntegerAccess() {
		return pInteger;
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}
	
	//enum DataType:
	//	boolean | string='String' | number | date;
	public DataTypeElements getDataTypeAccess() {
		return eDataType;
	}
	
	public EnumRule getDataTypeRule() {
		return getDataTypeAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
